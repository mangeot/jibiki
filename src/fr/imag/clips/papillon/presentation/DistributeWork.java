/*
 * papillon 
 *
 * Enhydra super-servlet
 * 
 * © Mathieu Mangeot & Gilles Sérasset - GETA CLIPS IMAG
 * Projet Papillon
 *-----------------------------------------------
 * $Id: RetrieveAccount.java 734 2007-02-02 16:20:14Z mangeot $
 *-----------------------------------------------
 * $Log$
 * Revision 1.1.2.2  2007/02/02 16:20:14  mangeot
 * Added files for th Observateur project
 *
 * Revision 1.1.2.1  2006/08/27 20:52:57  mangeot
 * Added email functionalities.
 * javamail 1.4 and java activation framework must be added
 *
 * Revision 1.5  2006/02/26 14:04:56  mangeot
 * Corrected a bug: the content was a static variable, thus there were problems when two users wanted to aces the same page at the same time
 *
 * Revision 1.4  2005/05/24 12:51:22  serasset
 * Updated many aspect of the Papillon project to handle lexalp project.
 * 1. Layout is now parametrable in the application configuration file.
 * 2. Notion of QueryResult has been defined to handle mono/bi and multi lingual dictionary requests
 * 3. Result presentation may be done by way of standard xsl or with any class implementing the appropriate interface.
 * 4. Enhanced dictionary edition management. The template interfaces has to be revised to be compatible.
 * 5. It is now possible to give a name to the cookie key in the app conf file
 * 6. Several bug fixes.
 *
 * Revision 1.3  2005/04/11 08:01:02  fbrunet
 * Passage en xhtml des ressources Papillon.
 *
 * Revision 1.2  2005/01/15 12:51:24  mangeot
 * Deleting old cvs comments + bug fixes with xhtml and enhydra5.1
 *
 * Revision 1.1.1.1  2004/12/06 16:38:42  serasset
 * Papillon for enhydra 5.1. This version compiles and starts with enhydra 5.1.
 * There are still bugs in the code.
 *
 *-----------------------------------------------
 * Papillon Login page.
 */

package fr.imag.clips.papillon.presentation;

// Enhydra SuperServlet imports
import com.lutris.appserver.server.httpPresentation.HttpPresentation;
import com.lutris.appserver.server.httpPresentation.HttpPresentationRequest;
import com.lutris.appserver.server.httpPresentation.HttpPresentationException;
import com.lutris.appserver.server.httpPresentation.ClientPageRedirectException;

//import org.enhydra.xml.xmlc.XMLObject;
import org.w3c.dom.html.*;
import org.w3c.dom.Element;
import org.w3c.dom.Node;
import org.w3c.dom.Text;

import fr.imag.clips.papillon.business.message.MessageDBLoader;

//import com.lutris.appserver.server.httpPresentation.HttpPresentationOutputStream;
//import com.lutris.appserver.server.httpPresentation.HttpPresentationResponse;

// Standard imports
import java.io.IOException;
import java.util.Date;
import java.text.DateFormat;
import java.io.*;

import org.apache.xerces.dom.*;

// for users
import fr.imag.clips.papillon.business.user.*;

import fr.imag.clips.papillon.data.*;
import fr.imag.clips.papillon.business.utility.Utility;
import fr.imag.clips.papillon.business.utility.Email;
//import fr.imag.clips.papillon.business.transformation.*;
import fr.imag.clips.papillon.business.PapillonLogger;

import fr.imag.clips.papillon.presentation.xhtml.orig.*;


public class DistributeWork extends PapillonBasePO {
    
    protected DistributeWorkTmplXHTML content;
	
    protected final static String SEND_DOMAIN_PARAMETER="SendDomain";
    protected final static String DOMAIN_PARAMETER="Domain";
    protected final static String USER_PARAMETER="User";
	
	// This stext should be put into properties files and localized!
	protected final static String SendDomainSubject_eng = "Jibiki server: Pending Work";
	protected final static String send_domain_header = "\nHello,\n\nThis email was automatically generated by the Jibiki server.\n\n"
		+ "An analysis of your work shows that you should write entries in the follwing domain: ";	
	
    protected boolean loggedInUserRequired() {
        return false;
    }
	
    protected boolean userMayUseThisPO() {
        return true;
    }
    
    protected  int getCurrentSection() {
        return NO_SECTION;
    }
	
    public Node getContent()
        throws javax.xml.parsers.ParserConfigurationException,
	       HttpPresentationException,
	       IOException, org.xml.sax.SAXException,
	       javax.xml.transform.TransformerException {
			   
			   // Création du contenu
			   content = (DistributeWorkTmplXHTML)MultilingualXHtmlTemplateFactory.createTemplate("DistributeWorkTmplXHTML", this.getComms(), this.getSessionData());
			   
			   HttpPresentationRequest req = this.getComms().request;
			   
			   String sendDomain = myGetParameter(SEND_DOMAIN_PARAMETER);
			   String domain = myGetParameter(DOMAIN_PARAMETER);
			   String userHandle = myGetParameter(USER_PARAMETER);
			   
			   String userMessage = "";
			   // If the page is called with parameters, take the requested action
			   if (sendDomain!= null && !sendDomain.equals("") &&
					domain!= null && !domain.equals("") &&
					userHandle!= null && !userHandle.equals("")
				   	) {
				   User theUser = UsersFactory.findUserById(userHandle);
				   if (theUser != null && !theUser.isEmpty()) {
						boolean sent = Email.send(theUser.getEmail(), SendDomainSubject_eng, Email.getFromAddress(), send_domain_header + domain + ".\n\n", true, true);
						if (sent) {
							userMessage += "An email has been sent to the following email address: " + theUser.getEmail();
						}
						else {
							userMessage += "There was a problem sending the email";
						}
				   }
				   else {
					   userMessage += "The user account does not exist!";
				   }
			   }
			   else {
			   }
			   
			   this.getSessionData().writeUserMessage(userMessage);
			   PapillonLogger.writeDebugMsg(userMessage);
			   return content.getElementFormulaire();
		   }	
}
