<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
  <head>
    <link href="css/papillon-home.css" rel="StyleSheet" type="text/css" />
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
    <meta name="author" content="Mathieu MANGEOT &amp; Gilles Sérasset" />
    <meta name="keywords" content="dictionnaire, multilingue, projet papillon, base lexicale, français, japonais, multilingual dictionary, papillon project, lexical database, French, English, Japanese, 電子辞書,オンライン辞書,電子辞典,オンライン辞典,仏和辞典,和仏辞典,フランス語辞典,仏語辞典" />  
	 <!-- 電子辞書 (denshi jisyo: electronic lexicon)
オンライン辞書 (online jisyo: online lexicon)
電子辞典 (denshi jiten: electronic dictionary)
オンライン辞典 (online jisyo: online dictionary)
仏和辞典 (futsuwa jiten: French-Japanese dictionary)
和仏辞典 (wafutsu jiten: Japanese-French dictionary)
フランス語辞典 (Furansugo jiten: French dictionary)
仏語辞典 (Futsugo jiten: French dictionary) -->
    <meta name="description" content="Le projet Papillon a pour but de créer une base lexicale multilingue comprenant entre autres l'anglais, le français, le japonais, le malais, le lao, le thaï, le vietnamien et le chinois. L'accès est libre et gratuit. Notre projet se veut utile et ouvert à la collaboration de toutes les personnes ayant un intérêt pour ces langues パピロンプロジェクトは、特に英語、フランス語、日本語、ラオス語、マレイ語、タイ語、中国語及びベトナム語といった多言語の語彙データベースの作成を目指します。商業目的ではなくオープンソースで誰でも無料で利用できます。何人かの機械言語学者によって始められた私たちのプロジェクトはこれらの言語に興味を持っているすべての人々にとって有効かつ開かれる事を目指しています。 Papillon project aims at creating a multilingual lexical database covering among others English, French, Japanese, Lao, Thaï and Chinese. The access will be free. Our project aims at being useful and open to all those who are interested in these languages." />
    <meta name="generator" content="Dynamically generated by Enhydra from Hand crafted XHTML documents." />
    <meta name="robots" content="index, follow" />
    <title>Dictionnaire multilingue Papillon Multilingual Dictionary パピヨン多言語電子辞典</title>
	<style type="text/css"> 
	<!--
		table {
		text-align: center;
		margin-left: auto;
		margin-right: auto;
	}
	
	.interface {
		text-align: center;
	}
	
	.elevator {
		width: 180px;
		height: 500px;
		overflow: scroll;
		text-align: left;
	}
	// -->
	</style>
	<script type="text/javascript">
	<!--

	var url = 'BrowseVolume.po?';

	/*** HTTP request ***/

  var http_request = false;
  
  function makeRequests(element) {
  
  	var elev = element.ownerDocument.getElementById('elevator');
  	while (elev.firstChild) {
  		elev.removeChild(elev.firstChild);
  	}
  	
  	var parameters = 'VOLUME=' + element.ownerDocument.getElementById('VOLUME').value;
  	parameters += '&HEADWORD=' + element.ownerDocument.getElementById('HEADWORD').value
  	parameters += '&STATUS=' + element.ownerDocument.getElementById('STATUS').value
  	if (element.ownerDocument.getElementById('LIMIT')) {
  		parameters += '&LIMIT=' + element.ownerDocument.getElementById('LIMIT').value
  	}
  	makeRequest("updown",parameters);
  }
  
  function increaseTable(direction, table) {
	var node = table;
  	if (direction=="up") {
		node = node.firstChild;
  		while (node.nodeName !='A') {
  			node = node.nextSibling;
  		}
  	}
  	else {
		node = node.lastChild;
  		while (node.nodeName !='A') {
  			node = node.previousSibling;
  		}
  	}
  	var headword = node.firstChild.nodeValue;

  	var parameters = "VOLUME=" + table.ownerDocument.getElementById('VOLUME').value;
  	parameters += "&HEADWORD=" + headword;
  	parameters += '&STATUS=' + table.ownerDocument.getElementById('STATUS').value;
  	if (table.ownerDocument.getElementById('LIMIT')) {
  		parameters += '&LIMIT=' + table.ownerDocument.getElementById('LIMIT').value
  	}
  	makeRequest(direction,parameters);
  }

  function makeRequest(direction,parameters) {
  
  	parameters+= "&DIRECTION=" + direction;
  
  
		
  	try {
   		netscape.security.PrivilegeManager.enablePrivilege("UniversalBrowserRead");
   	} catch (e) {
    	/*alert("Permission UniversalBrowserRead denied."); */
   	}

    http_request = false;
    
    /*@cc_on
         @if (@_jscript_version >= 5)
          try {
              http_request = new ActiveXObject("Msxml2.XMLHTTP");
              } catch (e) {
              try {
                  http_request = new ActiveXObject("Microsoft.XMLHTTP");
                  } catch (E) {
                  http_request = false;
                  }
              } 
         @else
          http_request = false;
         @end @*/

    
    http_request = new XMLHttpRequest();
    if (http_request.overrideMimeType) {
      http_request.overrideMimeType('text/xml');
    }
    http_request.setRequestHeader("Content-Type", "text/xml;charset=utf-8")
    if (!http_request) {
      alert('Cannot create XMLHTTP instance');
      return false;
    }
   // it seems to be impossible to pass parameters to the function called by onreadystatechange
    if (direction== 'up') {
     http_request.onreadystatechange = getUpContent;
    }
    else {
     http_request.onreadystatechange = getDownContent;
    }
    http_request.open('GET', url + parameters, true);
    http_request.send(null);
  }

  function getUpContent() {
    if (http_request.readyState == 4) {
      if (http_request.status == 200) {

        var string = http_request.responseText;
      	addElements(document.getElementById('elevator'),string,'up');

      } else {
        alert('There was a problem with the request.');
      }
    }
   }
    
  function getDownContent() {
    if (http_request.readyState == 4) {
      if (http_request.status == 200) {

        var string = http_request.responseText;
      	addElements(document.getElementById('elevator'),string,'down');

      } else {
        alert('There was a problem with the request.');
      }
    }
  }
  
  	/*** Array ***/
  	
		function addArrayUp(element, array) {
		
			var theDocument = element.ownerDocument;
			for (var i=0; i<array.length; i++) {
				var couple = array[i];
				
				var coupleArray = couple.split('#,#');
			
				var br = theDocument.createElement('br');
				var a = theDocument.createElement('a');
				
				var page = 'ConsultExpert.po?LOOKUP=LOOKUP&VOLUME=' + theDocument.getElementById('VOLUME').value + '&handle=' + coupleArray[1];
				
				a.setAttribute('href',page);
				a.setAttribute('target','_blank');
				var text = theDocument.createTextNode(coupleArray[0]);
				a.appendChild(text);
				element.insertBefore(br,element.firstChild);
				element.insertBefore(a,element.firstChild);
			}
		}
		
		function addArrayDown(element, array) {
		
			var theDocument = element.ownerDocument;
			for (var i=0; i< array.length; i++) {
				var couple = array[i];
				
				var coupleArray = couple.split('#,#');
			
				var br = theDocument.createElement('br');
				var a = theDocument.createElement('a');
				
				var page = 'ConsultExpert.po?LOOKUP=LOOKUP&VOLUME=' + theDocument.getElementById('VOLUME').value+ '&handle=' + coupleArray[1];
				
				a.setAttribute('href',page);
				a.setAttribute('target','_blank');
				var text = theDocument.createTextNode(coupleArray[0]);
				a.appendChild(text);
				element.appendChild(a);
				element.appendChild(br);
			}
		}
		
		function addElements(parent, elementsString, direction) {
					
			var rootbegin = "<entries>";
			var rootend = "<\/entries>";
			
			var first = elementsString.indexOf(rootbegin);
			var end = elementsString.indexOf(rootend);
			
			var first = first + rootbegin.length;
			elementsString = elementsString.substring(first, end-1);
			
			var theArray = new Array();
			theArray = elementsString.split('#;#');
			
			if (direction=='up' || direction == 'updown') {
				addArrayUp(parent,theArray);
			}
			else {
				addArrayDown(parent,theArray);
			}
			
			//var newNode = theDocument.importNode(element, true);
			//alert(newNode.nodeName);

			//for (var i=0; i< elements.length; i++) {
				//alert(elements[i]);
				//var newNode = theDocument.importNode(elements[i]);
				//alert(newNode);
				//parent.appendChild(newNode);
			//}
		}

		// -->
	</script>
</head>
<body>
 <div class="main">
    <table summary="Dictionary sorted in alphabetical order">
    	<thead>
    		<tr><th>
    		<input name="LIMIT" id="LIMIT" type="hidden" value="30"/>
    		<input name="STATUS" id="STATUS" type="hidden" value=""/>
    		<label id="VolumeLabel" for="VOLUME">Volume:
    		<select name="VOLUME" id="VOLUME">
    			<option id="VolumeOptionTemplate" label="tmpl" value="tmpl">tmpl</option>
    		</select>
			</label>
			<br />
    		<input type="text" id="HEADWORD" name="HEADWORD" value=""/>
    		<input type="button" value="OK" onclick="makeRequests(this)" /><br />
    		<input type="button" value="-" onclick="increaseTable('up',document.getElementById('elevator'))"/>
    		</th></tr>
    	</thead>
    	<tfoot>
    		<tr><th>
    		<input type="button" value="+" onclick="increaseTable('down',document.getElementById('elevator'))" />
    		</th></tr>
    	</tfoot>
    	<tbody>
    	<tr>
    		<td><div id="elevator" class="elevator">
  		</div>
 			</td>
 		</tr>
    	</tbody>
 	</table>
 </div>
    <div class="copyright">© 2001-2005 <a href="mailto:Mathieu.MangeotATimag.fr?subject=GDEFServer&amp;body=replace&nbsp;AT&nbsp;by&nbsp;@&nbsp;in&nbsp;the&nbsp;email&nbsp;address">Mathieu Mangeot</a> &amp; <a href="mailto:gilles.serassetATimag.fr?subject=PapillonServer&amp;body=replace&nbsp;AT&nbsp;by&nbsp;@&nbsp;in&nbsp;the&nbsp;email&nbsp;address">Gilles Sérasset</a>, GETA-CLIPS. All rights reserved.</div>
  </body>
</html>
